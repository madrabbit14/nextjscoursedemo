{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Dev\\\\react\\\\udemycourse\\\\mycode\\\\react-section23-nextjs-bigger\\\\pages\\\\index.js\";\nimport Head from 'next/head';\n//next js detects this import is used only server side and will not bundle it with client side code\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  //will receive props from staticprops\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n} //only works on components inside 'pages' folder\n//can be async, next.js will wait before rendering the page\n\n\n_c = HomePage;\n\n/*\r\n//not good in this case because the data is not changing frequently\r\nexport async function getServerSideProps(context) {\r\n    const req = context.req;\r\n    const res = context.res;\r\n\r\n    //this code only runs in server\r\n    //fetch data from API\r\n    return {\r\n        props: {\r\n            meetups: DUMMY_MEETUPS\r\n        }\r\n    };\r\n};\r\n*/\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/Dev/react/udemycourse/mycode/react-section23-nextjs-bigger/pages/index.js"],"names":["Head","MeetupList","HomePage","props","meetups"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACuC;AAEvC,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;;;KANSF,Q;;AAwCT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeA,QAAf","sourcesContent":["import Head from 'next/head';\r\nimport { MongoClient } from \"mongodb\"; //next js detects this import is used only server side and will not bundle it with client side code\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nfunction HomePage(props) {\r\n  //will receive props from staticprops\r\n  return <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n//only works on components inside 'pages' folder\r\n//can be async, next.js will wait before rendering the page\r\nexport async function getStaticProps() {\r\n  //this code is executed during build, so it can become outdated\r\n\r\n  //fetch data from an API\r\n  //you could use fetch to retrieve data from your own API, but seems redundant\r\n\r\n  //since this method is also never run client-side, you can use it to gather data without exposing backend.\r\n  console.log(\"index.js getStaticProps: connecting\");\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  console.log(\"index.js getStaticProps: connected. getting db\");\r\n  const db = client.db();\r\n  console.log(\"index.js getStaticProps: got DB, getting collection\");\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        description: meetup.description,\r\n        id: meetup[\"_id\"].toString()\r\n      })),\r\n    },\r\n    revalidate: 180, //seconds\r\n  }; //always need to return obj\r\n}\r\n\r\n/*\r\n//not good in this case because the data is not changing frequently\r\nexport async function getServerSideProps(context) {\r\n    const req = context.req;\r\n    const res = context.res;\r\n\r\n    //this code only runs in server\r\n    //fetch data from API\r\n    return {\r\n        props: {\r\n            meetups: DUMMY_MEETUPS\r\n        }\r\n    };\r\n};\r\n*/\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}