{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Dev\\\\react\\\\udemycourse\\\\mycode\\\\react-section23-nextjs-bigger\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from 'mongodb';\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1024px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"Title prop\",\n    address: \"Address prop\",\n    description: \"Description prop\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  var _meetups$, _meetups$2, _meetups$3, _meetups$4;\n\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  console.log(\"getStaticProps: connecting\");\n  const client = await MongoClient.connect(\"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\");\n  console.log(\"getStaticProps: connected. getting db\");\n  const db = client.db();\n  console.log(\"getStaticProps: got DB, getting collection\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({\n    _id: meetupId\n  }).toArray();\n  console.log(\"getStaticProps: found item: \" + meetups.length);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        image: (_meetups$ = meetups[0]) === null || _meetups$ === void 0 ? void 0 : _meetups$.image,\n        address: (_meetups$2 = meetups[0]) === null || _meetups$2 === void 0 ? void 0 : _meetups$2.address,\n        title: (_meetups$3 = meetups[0]) === null || _meetups$3 === void 0 ? void 0 : _meetups$3.title,\n        description: (_meetups$4 = meetups[0]) === null || _meetups$4 === void 0 ? void 0 : _meetups$4.description\n      }\n    }\n  };\n} //needed on dynamic pages with getStaticProps\n\nexport async function getStaticPaths() {\n  console.log(\"getStaticPaths: connecting\");\n  const client = await MongoClient.connect(\"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\");\n  console.log(\"getStaticPaths: connected. getting db\");\n  const db = client.db();\n  console.log(\"getStaticPaths: got DB, getting collection\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(\"getStaticPaths: found items: \" + meetups.length);\n  client.close();\n  return {\n    paths: meetups.map(item => {\n      return {\n        params: {\n          meetupId: item['_id'].toString()\n        }\n      };\n    }),\n    fallback: false // false: returns 404 on unspecified ids, true: renders dynamically, useful for preparing most used pages\n\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Dev/react/udemycourse/mycode/react-section23-nextjs-bigger/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","getStaticProps","context","meetupId","params","console","log","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","length","close","props","meetupData","image","address","title","description","getStaticPaths","paths","map","item","toString","fallback"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,wHADR;AAEE,IAAA,KAAK,EAAC,YAFR;AAGE,IAAA,OAAO,EAAC,cAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAAA;;AAE1C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,oHADmB,CAArB;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,QAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACA,QAAMI,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB;AAACC,IAAAA,GAAG,EAAEX;AAAN,GAAvB,EAAwCY,OAAxC,EAAtB;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAA+BM,OAAO,CAACI,MAAnD;AACAT,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AAACC,IAAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AACxBC,QAAAA,KAAK,eAAER,OAAO,CAAC,CAAD,CAAT,8CAAE,UAAYQ,KADK;AAExBC,QAAAA,OAAO,gBAAET,OAAO,CAAC,CAAD,CAAT,+CAAE,WAAYS,OAFG;AAGxBC,QAAAA,KAAK,gBAAEV,OAAO,CAAC,CAAD,CAAT,+CAAE,WAAYU,KAHK;AAIxBC,QAAAA,WAAW,gBAAEX,OAAO,CAAC,CAAD,CAAT,+CAAE,WAAYW;AAJD;AAAb;AAAR,GAAP;AAMH,C,CAED;;AACA,OAAO,eAAeC,cAAf,GAAgC;AAEnCnB,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,oHADmB,CAArB;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,QAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACA,QAAMI,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAgCM,OAAO,CAACI,MAApD;AAEAT,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACHQ,IAAAA,KAAK,EAAEb,OAAO,CAACc,GAAR,CAAYC,IAAI,IAAI;AACvB,aAAO;AAAEvB,QAAAA,MAAM,EAAE;AAACD,UAAAA,QAAQ,EAAEwB,IAAI,CAAC,KAAD,CAAJ,CAAYC,QAAZ;AAAX;AAAV,OAAP;AACH,KAFM,CADJ;AAIHC,IAAAA,QAAQ,EAAE,KAJP,CAIa;;AAJb,GAAP;AAMH;AAED,eAAe7B,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport {MongoClient} from 'mongodb';\r\n\r\nconst MeetupDetails = () => {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1024px-Stadtbild_M%C3%BCnchen.jpg\"\r\n      title=\"Title prop\"\r\n      address=\"Address prop\"\r\n      description=\"Description prop\"\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    console.log(meetupId);\r\n\r\n    console.log(\"getStaticProps: connecting\");\r\n    const client = await MongoClient.connect(\r\n      \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    console.log(\"getStaticProps: connected. getting db\");\r\n    const db = client.db();\r\n    console.log(\"getStaticProps: got DB, getting collection\");\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n  \r\n    const meetups = await meetupsCollection.find({_id: meetupId}).toArray();\r\n    console.log(\"getStaticProps: found item: \"+meetups.length);\r\n    client.close();\r\n\r\n    return {props: {meetupData: {\r\n        image: meetups[0]?.image,\r\n        address: meetups[0]?.address,\r\n        title: meetups[0]?.title,\r\n        description: meetups[0]?.description\r\n    }}}\r\n}\r\n\r\n//needed on dynamic pages with getStaticProps\r\nexport async function getStaticPaths() {\r\n\r\n    console.log(\"getStaticPaths: connecting\");\r\n    const client = await MongoClient.connect(\r\n      \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    console.log(\"getStaticPaths: connected. getting db\");\r\n    const db = client.db();\r\n    console.log(\"getStaticPaths: got DB, getting collection\");\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n  \r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n    console.log(\"getStaticPaths: found items: \"+meetups.length);\r\n\r\n    client.close();\r\n\r\n    return {\r\n        paths: meetups.map(item => {\r\n            return { params: {meetupId: item['_id'].toString()}};\r\n        }),\r\n        fallback: false // false: returns 404 on unspecified ids, true: renders dynamically, useful for preparing most used pages\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}