{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Dev\\\\react\\\\udemycourse\\\\mycode\\\\react-section23-nextjs-bigger\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from 'mongodb';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  console.log(\"getStaticProps: connecting\");\n  const client = await MongoClient.connect(\"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\");\n  console.log(\"getStaticProps: connected. getting db\");\n  const db = client.db();\n  console.log(\"getStaticProps: got DB, getting collection\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const singleMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  console.log(\"getStaticProps: found item: \" + singleMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: singleMeetup\n    }\n  };\n} //needed on dynamic pages with getStaticProps\n\nexport async function getStaticPaths() {\n  console.log(\"getStaticPaths: connecting\");\n  const client = await MongoClient.connect(\"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\");\n  console.log(\"getStaticPaths: connected. getting db\");\n  const db = client.db();\n  console.log(\"getStaticPaths: got DB, getting collection\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(\"getStaticPaths: found items: \" + meetups.length);\n  client.close();\n  return {\n    paths: meetups.map(item => {\n      return {\n        params: {\n          meetupId: item['_id'].toString()\n        }\n      };\n    }),\n    fallback: false // false: returns 404 on unspecified ids, true: renders dynamically, useful for preparing most used pages\n\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Dev/react/udemycourse/mycode/react-section23-nextjs-bigger/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","props","meetupData","image","title","address","description","getStaticProps","context","meetupId","params","console","log","client","connect","db","meetupsCollection","collection","singleMeetup","findOne","_id","close","getStaticPaths","meetups","find","toArray","length","paths","map","item","toString","fallback"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,oHADmB,CAArB;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,QAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACA,QAAMI,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,YAAY,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAACC,IAAAA,GAAG,EAAEX;AAAN,GAA1B,CAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAA+BM,YAA3C;AACAL,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AAACpB,IAAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAEgB;AAAb;AAAR,GAAP;AACH,C,CAED;;AACA,OAAO,eAAeI,cAAf,GAAgC;AAEnCX,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,oHADmB,CAArB;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,QAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACA,QAAMI,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMM,OAAO,GAAG,MAAMP,iBAAiB,CAACQ,IAAlB,CAAuB,EAAvB,EAA2B;AAACJ,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCK,OAArC,EAAtB;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAgCW,OAAO,CAACG,MAApD;AAEAb,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACHM,IAAAA,KAAK,EAAEJ,OAAO,CAACK,GAAR,CAAYC,IAAI,IAAI;AACvB,aAAO;AAAEnB,QAAAA,MAAM,EAAE;AAACD,UAAAA,QAAQ,EAAEoB,IAAI,CAAC,KAAD,CAAJ,CAAYC,QAAZ;AAAX;AAAV,OAAP;AACH,KAFM,CADJ;AAIHC,IAAAA,QAAQ,EAAE,KAJP,CAIa;;AAJb,GAAP;AAMH;AAED,eAAe/B,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport {MongoClient} from 'mongodb';\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    console.log(meetupId);\r\n\r\n    console.log(\"getStaticProps: connecting\");\r\n    const client = await MongoClient.connect(\r\n      \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    console.log(\"getStaticProps: connected. getting db\");\r\n    const db = client.db();\r\n    console.log(\"getStaticProps: got DB, getting collection\");\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n  \r\n    const singleMeetup = await meetupsCollection.findOne({_id: meetupId });\r\n    console.log(\"getStaticProps: found item: \"+singleMeetup);\r\n    client.close();\r\n\r\n    return {props: {meetupData: singleMeetup}}\r\n}\r\n\r\n//needed on dynamic pages with getStaticProps\r\nexport async function getStaticPaths() {\r\n\r\n    console.log(\"getStaticPaths: connecting\");\r\n    const client = await MongoClient.connect(\r\n      \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    console.log(\"getStaticPaths: connected. getting db\");\r\n    const db = client.db();\r\n    console.log(\"getStaticPaths: got DB, getting collection\");\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n  \r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n    console.log(\"getStaticPaths: found items: \"+meetups.length);\r\n\r\n    client.close();\r\n\r\n    return {\r\n        paths: meetups.map(item => {\r\n            return { params: {meetupId: item['_id'].toString()}};\r\n        }),\r\n        fallback: false // false: returns 404 on unspecified ids, true: renders dynamically, useful for preparing most used pages\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}