{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Dev\\\\react\\\\udemycourse\\\\mycode\\\\react-section23-nextjs-bigger\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from 'mongodb';\n\nconst MeetupDetails = props => {\n  console.log('Received meetupData: ' + JSON.stringify(props.meetupData));\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  console.log(\"getStaticProps: connecting\");\n  const client = await MongoClient.connect(\"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\");\n  console.log(\"getStaticProps: connected. getting db\");\n  const db = client.db();\n  console.log(\"getStaticProps: got DB, getting collection\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const singleMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(\"getStaticProps: found item: \" + singleMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: singleMeetup['_id'].toString(),\n        title: singleMeetup.title,\n        image: singleMeetup.image,\n        description: singleMeetup.description\n      }\n    }\n  };\n} //needed on dynamic pages with getStaticProps\n\nexport async function getStaticPaths() {\n  console.log(\"getStaticPaths: connecting\");\n  const client = await MongoClient.connect(\"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\");\n  console.log(\"getStaticPaths: connected. getting db\");\n  const db = client.db();\n  console.log(\"getStaticPaths: got DB, getting collection\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(\"getStaticPaths: found items: \" + meetups.length);\n  client.close();\n  return {\n    paths: meetups.map(item => {\n      return {\n        params: {\n          meetupId: item['_id'].toString()\n        }\n      };\n    }),\n    fallback: false // false: returns 404 on unspecified ids, true: renders dynamically, useful for preparing most used pages\n\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Dev/react/udemycourse/mycode/react-section23-nextjs-bigger/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","console","log","JSON","stringify","meetupData","image","title","address","description","getStaticProps","context","meetupId","params","client","connect","db","meetupsCollection","collection","singleMeetup","findOne","_id","close","id","toString","getStaticPaths","meetups","find","toArray","length","paths","map","item","fallback"],"mappings":"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","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport {MongoClient, ObjectId} from 'mongodb';\r\n\r\nconst MeetupDetails = (props) => {\r\n\r\n    console.log('Received meetupData: '+JSON.stringify(props.meetupData));\r\n\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    console.log(meetupId);\r\n\r\n    console.log(\"getStaticProps: connecting\");\r\n    const client = await MongoClient.connect(\r\n      \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    console.log(\"getStaticProps: connected. getting db\");\r\n    const db = client.db();\r\n    console.log(\"getStaticProps: got DB, getting collection\");\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n  \r\n    const singleMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId) });\r\n    console.log(\"getStaticProps: found item: \"+singleMeetup);\r\n    client.close();\r\n\r\n    return {props: {meetupData: {\r\n        id: singleMeetup['_id'].toString(),\r\n        title: singleMeetup.title,\r\n        image: singleMeetup.image,\r\n        description: singleMeetup.description\r\n    }}};\r\n}\r\n\r\n//needed on dynamic pages with getStaticProps\r\nexport async function getStaticPaths() {\r\n\r\n    console.log(\"getStaticPaths: connecting\");\r\n    const client = await MongoClient.connect(\r\n      \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    console.log(\"getStaticPaths: connected. getting db\");\r\n    const db = client.db();\r\n    console.log(\"getStaticPaths: got DB, getting collection\");\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n  \r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n    console.log(\"getStaticPaths: found items: \"+meetups.length);\r\n\r\n    client.close();\r\n\r\n    return {\r\n        paths: meetups.map(item => {\r\n            return { params: {meetupId: item['_id'].toString()}};\r\n        }),\r\n        fallback: false // false: returns 404 on unspecified ids, true: renders dynamically, useful for preparing most used pages\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}