{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Dev\\\\react\\\\udemycourse\\\\mycode\\\\react-section23-nextjs-bigger\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\"; //next js detects this import is used only server side and will not bundle it with client side code\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A first meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1024px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 6, 4930 Some City\",\n  description: \"This is the first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A second meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Schloss_Nymphenburg_M%C3%BCnich.jpg/1024px-Schloss_Nymphenburg_M%C3%BCnich.jpg\",\n  address: \"Galaxy 1, Far Far Away\",\n  description: \"This is the second meetup!\"\n}, {\n  id: \"m3\",\n  title: \"A third meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/28/Englischer_Garten_M%C3%BCnchen.jpg/1024px-Englischer_Garten_M%C3%BCnchen.jpg\",\n  address: \"Corner 123, Nowhere\",\n  description: \"This is the third meetup!\"\n}];\n\nfunction HomePage(props) {\n  //will receive props from staticprops\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n} //only works on components inside 'pages' folder\n//can be async, next.js will wait before rendering the page\n\n\nexport async function getStaticProps() {\n  //this code is executed during build, so it can become outdated\n  //fetch data from an API\n  //you could use fetch to retrieve data from your own API, but seems redundant\n  //since this method is also never run client-side, you can use it to gather data without exposing backend.\n  console.log(\"connecting\");\n  const client = await MongoClient.connect(\"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\");\n  console.log(\"connected. getting db\");\n  const db = client.db();\n  console.log(\"got DB, getting collection\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description,\n        id: meetup[\"_id\"]\n      }))\n    },\n    revalidate: 10 //seconds\n\n  }; //always need to return obj\n}\n/*\r\n//not good in this case because the data is not changing frequently\r\nexport async function getServerSideProps(context) {\r\n    const req = context.req;\r\n    const res = context.res;\r\n\r\n    //this code only runs in server\r\n    //fetch data from API\r\n    return {\r\n        props: {\r\n            meetups: DUMMY_MEETUPS\r\n        }\r\n    };\r\n};\r\n*/\n\nexport default HomePage;","map":{"version":3,"sources":["D:/Dev/react/udemycourse/mycode/react-section23-nextjs-bigger/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","console","log","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B,C,CAAuC;;AAEvC,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,wHAJJ;AAKEC,EAAAA,OAAO,EAAE,gCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,0IAJJ;AAKEC,EAAAA,OAAO,EAAE,wBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,EAiBpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,wIAJJ;AAKEC,EAAAA,OAAO,EAAE,qBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAjBoB,CAAtB;;AA2BA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AAEA;AACA;AAEA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,oHADmB,CAArB;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,QAAMI,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMR,OAAO,GAAG,MAAMO,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACY,GAAR,CAAaC,MAAD,KAAa;AAChCnB,QAAAA,KAAK,EAAEmB,MAAM,CAACnB,KADkB;AAEhCE,QAAAA,OAAO,EAAEiB,MAAM,CAACjB,OAFgB;AAGhCD,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAHkB;AAIhCE,QAAAA,WAAW,EAAEgB,MAAM,CAAChB,WAJY;AAKhCJ,QAAAA,EAAE,EAAEoB,MAAM,CAAC,KAAD;AALsB,OAAb,CAAZ;AADJ,KADF;AAULC,IAAAA,UAAU,EAAE,EAVP,CAUW;;AAVX,GAAP,CAnBqC,CA8BlC;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAehB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\"; //next js detects this import is used only server side and will not bundle it with client side code\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A first meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1024px-Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Some address 6, 4930 Some City\",\r\n    description: \"This is the first meetup!\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A second meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Schloss_Nymphenburg_M%C3%BCnich.jpg/1024px-Schloss_Nymphenburg_M%C3%BCnich.jpg\",\r\n    address: \"Galaxy 1, Far Far Away\",\r\n    description: \"This is the second meetup!\",\r\n  },\r\n  {\r\n    id: \"m3\",\r\n    title: \"A third meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/28/Englischer_Garten_M%C3%BCnchen.jpg/1024px-Englischer_Garten_M%C3%BCnchen.jpg\",\r\n    address: \"Corner 123, Nowhere\",\r\n    description: \"This is the third meetup!\",\r\n  },\r\n];\r\n\r\nfunction HomePage(props) {\r\n  //will receive props from staticprops\r\n  return <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n//only works on components inside 'pages' folder\r\n//can be async, next.js will wait before rendering the page\r\nexport async function getStaticProps() {\r\n  //this code is executed during build, so it can become outdated\r\n\r\n  //fetch data from an API\r\n  //you could use fetch to retrieve data from your own API, but seems redundant\r\n\r\n  //since this method is also never run client-side, you can use it to gather data without exposing backend.\r\n  console.log(\"connecting\");\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  console.log(\"connected. getting db\");\r\n  const db = client.db();\r\n  console.log(\"got DB, getting collection\");\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        description: meetup.description,\r\n        id: meetup[\"_id\"]\r\n      })),\r\n    },\r\n    revalidate: 10, //seconds\r\n  }; //always need to return obj\r\n}\r\n\r\n/*\r\n//not good in this case because the data is not changing frequently\r\nexport async function getServerSideProps(context) {\r\n    const req = context.req;\r\n    const res = context.res;\r\n\r\n    //this code only runs in server\r\n    //fetch data from API\r\n    return {\r\n        props: {\r\n            meetups: DUMMY_MEETUPS\r\n        }\r\n    };\r\n};\r\n*/\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}