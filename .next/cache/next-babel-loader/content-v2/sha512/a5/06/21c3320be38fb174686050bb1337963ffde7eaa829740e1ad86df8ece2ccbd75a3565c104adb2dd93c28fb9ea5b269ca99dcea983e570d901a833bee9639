{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Dev\\\\react\\\\udemycourse\\\\mycode\\\\react-section23-nextjs-bigger\\\\pages\\\\index.js\";\nimport Head from \"next/head\";\nimport { MongoClient } from \"mongodb\"; //next js detects this import is used only server side and will not bundle it with client side code\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  //will receive props from staticprops\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} //only works on components inside 'pages' folder\n//can be async, next.js will wait before rendering the page\n\n\nexport async function getStaticProps() {\n  //this code is executed during build, so it can become outdated\n  //fetch data from an API\n  //you could use fetch to retrieve data from your own API, but seems redundant\n  //since this method is also never run client-side, you can use it to gather data without exposing backend.\n  console.log(\"index.js getStaticProps: connecting\");\n  const client = await MongoClient.connect(\"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\");\n  console.log(\"index.js getStaticProps: connected. getting db\");\n  const db = client.db();\n  console.log(\"index.js getStaticProps: got DB, getting collection\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description,\n        id: meetup[\"_id\"].toString()\n      }))\n    },\n    revalidate: 180 //seconds\n\n  }; //always need to return obj\n}\n/*\r\n//not good in this case because the data is not changing frequently\r\nexport async function getServerSideProps(context) {\r\n    const req = context.req;\r\n    const res = context.res;\r\n\r\n    //this code only runs in server\r\n    //fetch data from API\r\n    return {\r\n        props: {\r\n            meetups: DUMMY_MEETUPS\r\n        }\r\n    };\r\n};\r\n*/\n\nexport default HomePage;","map":{"version":3,"sources":["D:/Dev/react/udemycourse/mycode/react-section23-nextjs-bigger/pages/index.js"],"names":["Head","MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","console","log","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","description","id","toString","revalidate"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CAAuC;;AAEvC,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,C,CAED;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AAEA;AACA;AAEA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACA,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,oHADmB,CAArB;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACA,QAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACA,QAAMI,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMR,OAAO,GAAG,MAAMO,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACY,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFgB;AAGhCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHkB;AAIhCC,QAAAA,WAAW,EAAEJ,MAAM,CAACI,WAJY;AAKhCC,QAAAA,EAAE,EAAEL,MAAM,CAAC,KAAD,CAAN,CAAcM,QAAd;AAL4B,OAAb,CAAZ;AADJ,KADF;AAULC,IAAAA,UAAU,EAAE,GAVP,CAUY;;AAVZ,GAAP,CAnBqC,CA8BlC;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAetB,QAAf","sourcesContent":["import Head from \"next/head\";\r\nimport { MongoClient } from \"mongodb\"; //next js detects this import is used only server side and will not bundle it with client side code\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nfunction HomePage(props) {\r\n  //will receive props from staticprops\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>React meetups</title>\r\n      </Head>\r\n      <MeetupList meetups={props.meetups} />\r\n    </>\r\n  );\r\n}\r\n\r\n//only works on components inside 'pages' folder\r\n//can be async, next.js will wait before rendering the page\r\nexport async function getStaticProps() {\r\n  //this code is executed during build, so it can become outdated\r\n\r\n  //fetch data from an API\r\n  //you could use fetch to retrieve data from your own API, but seems redundant\r\n\r\n  //since this method is also never run client-side, you can use it to gather data without exposing backend.\r\n  console.log(\"index.js getStaticProps: connecting\");\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  console.log(\"index.js getStaticProps: connected. getting db\");\r\n  const db = client.db();\r\n  console.log(\"index.js getStaticProps: got DB, getting collection\");\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        description: meetup.description,\r\n        id: meetup[\"_id\"].toString(),\r\n      })),\r\n    },\r\n    revalidate: 180, //seconds\r\n  }; //always need to return obj\r\n}\r\n\r\n/*\r\n//not good in this case because the data is not changing frequently\r\nexport async function getServerSideProps(context) {\r\n    const req = context.req;\r\n    const res = context.res;\r\n\r\n    //this code only runs in server\r\n    //fetch data from API\r\n    return {\r\n        props: {\r\n            meetups: DUMMY_MEETUPS\r\n        }\r\n    };\r\n};\r\n*/\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}