{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Dev\\\\react\\\\udemycourse\\\\mycode\\\\react-section23-nextjs-bigger\\\\pages\\\\[meetupId]\\\\index.js\";\nimport Head from 'next/head';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  console.log(\"Received meetupData: \" + JSON.stringify(props.meetupData));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Details of \", props.meetupData.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props.meetupData.id,\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  console.log(\"getStaticProps: connecting\");\n  const client = await MongoClient.connect(\"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\");\n  console.log(\"getStaticProps: connected. getting db\");\n  const db = client.db();\n  console.log(\"getStaticProps: got DB, getting collection\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const singleMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(\"getStaticProps: found item: \" + singleMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: singleMeetup[\"_id\"].toString(),\n        title: singleMeetup.title,\n        address: singleMeetup.address,\n        image: singleMeetup.image,\n        description: singleMeetup.description\n      }\n    }\n  };\n} //needed on dynamic pages with getStaticProps\n\nexport async function getStaticPaths() {\n  console.log(\"getStaticPaths: connecting\");\n  const client = await MongoClient.connect(\"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\");\n  console.log(\"getStaticPaths: connected. getting db\");\n  const db = client.db();\n  console.log(\"getStaticPaths: got DB, getting collection\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(\"getStaticPaths: found items: \" + meetups.length);\n  client.close();\n  return {\n    paths: meetups.map(item => {\n      return {\n        params: {\n          meetupId: item[\"_id\"].toString()\n        }\n      };\n    }),\n    fallback: false // false: returns 404 on unspecified ids, true: renders dynamically, useful for preparing most used pages\n\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Dev/react/udemycourse/mycode/react-section23-nextjs-bigger/pages/[meetupId]/index.js"],"names":["Head","MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","console","log","JSON","stringify","meetupData","title","id","image","address","description","getStaticProps","context","meetupId","params","client","connect","db","meetupsCollection","collection","singleMeetup","findOne","_id","close","toString","getStaticPaths","meetups","find","toArray","length","paths","map","item","fallback"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  console.log(\"Received meetupData: \" + JSON.stringify(props.meetupData));\r\n\r\n  return (\r\n    <>\r\n    <Head>\r\n        <title>Details of {props.meetupData.title}</title>\r\n    </Head>\r\n    <MeetupDetail\r\n      id={props.meetupData.id}\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  console.log(meetupId);\r\n\r\n  console.log(\"getStaticProps: connecting\");\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  console.log(\"getStaticProps: connected. getting db\");\r\n  const db = client.db();\r\n  console.log(\"getStaticProps: got DB, getting collection\");\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const singleMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  console.log(\"getStaticProps: found item: \" + singleMeetup);\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: singleMeetup[\"_id\"].toString(),\r\n        title: singleMeetup.title,\r\n        address: singleMeetup.address,\r\n        image: singleMeetup.image,\r\n        description: singleMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\n//needed on dynamic pages with getStaticProps\r\nexport async function getStaticPaths() {\r\n  console.log(\"getStaticPaths: connecting\");\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  console.log(\"getStaticPaths: connected. getting db\");\r\n  const db = client.db();\r\n  console.log(\"getStaticPaths: got DB, getting collection\");\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  console.log(\"getStaticPaths: found items: \" + meetups.length);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    paths: meetups.map((item) => {\r\n      return { params: { meetupId: item[\"_id\"].toString() } };\r\n    }),\r\n    fallback: false, // false: returns 404 on unspecified ids, true: renders dynamically, useful for preparing most used pages\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}