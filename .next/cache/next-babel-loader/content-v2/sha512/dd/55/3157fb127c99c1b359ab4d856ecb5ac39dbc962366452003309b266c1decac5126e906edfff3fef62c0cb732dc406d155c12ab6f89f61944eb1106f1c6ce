{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Dev\\\\react\\\\udemycourse\\\\mycode\\\\react-section23-nextjs-bigger\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport Head from 'next/head';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  console.log(\"Received meetupData: \" + JSON.stringify(props.meetupData));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Details of \", props.meetupData.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props.meetupData.id,\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/Dev/react/udemycourse/mycode/react-section23-nextjs-bigger/pages/[meetupId]/index.js"],"names":["Head","MeetupDetail","MeetupDetails","props","console","log","JSON","stringify","meetupData","title","description","id","image","address"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,UAArB,CAAtC;AAEA,sBACE;AAAA,4BACA,QAAC,IAAD;AAAA,8BACI;AAAA,kCAAmBL,KAAK,CAACK,UAAN,CAAiBC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEN,KAAK,CAACK,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAKA,QAAC,YAAD;AACE,MAAA,EAAE,EAAEP,KAAK,CAACK,UAAN,CAAiBG,EADvB;AAEE,MAAA,KAAK,EAAER,KAAK,CAACK,UAAN,CAAiBI,KAF1B;AAGE,MAAA,KAAK,EAAET,KAAK,CAACK,UAAN,CAAiBC,KAH1B;AAIE,MAAA,OAAO,EAAEN,KAAK,CAACK,UAAN,CAAiBK,OAJ5B;AAKE,MAAA,WAAW,EAAEV,KAAK,CAACK,UAAN,CAAiBE;AALhC;AAAA;AAAA;AAAA;AAAA,aALA;AAAA,kBADF;AAeD,CAlBD;;KAAMR,a;;AA6EN,eAAeA,aAAf","sourcesContent":["import Head from 'next/head';\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  console.log(\"Received meetupData: \" + JSON.stringify(props.meetupData));\r\n\r\n  return (\r\n    <>\r\n    <Head>\r\n        <title>Details of {props.meetupData.title}</title>\r\n        <meta name=\"description\" content={props.meetupData.description} />\r\n    </Head>\r\n    <MeetupDetail\r\n      id={props.meetupData.id}\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  console.log(meetupId);\r\n\r\n  console.log(\"getStaticProps: connecting\");\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  console.log(\"getStaticProps: connected. getting db\");\r\n  const db = client.db();\r\n  console.log(\"getStaticProps: got DB, getting collection\");\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const singleMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  console.log(\"getStaticProps: found item: \" + singleMeetup);\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: singleMeetup[\"_id\"].toString(),\r\n        title: singleMeetup.title,\r\n        address: singleMeetup.address,\r\n        image: singleMeetup.image,\r\n        description: singleMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\n//needed on dynamic pages with getStaticProps\r\nexport async function getStaticPaths() {\r\n  console.log(\"getStaticPaths: connecting\");\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://reacttestuser:react-test-user-01230@cluster0.ncjbaio.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  console.log(\"getStaticPaths: connected. getting db\");\r\n  const db = client.db();\r\n  console.log(\"getStaticPaths: got DB, getting collection\");\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  console.log(\"getStaticPaths: found items: \" + meetups.length);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    paths: meetups.map((item) => {\r\n      return { params: { meetupId: item[\"_id\"].toString() } };\r\n    }),\r\n    fallback: false, // false: returns 404 on unspecified ids, true: renders dynamically, useful for preparing most used pages\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}